language: go
go:
  - "1.8.x"
  - "1.9.x"
  - "1.10.x"
  - "1.11.x"
  - "1.12.x"
env:
  global:
    - GO111MODULE=on
matrix:
  include:
    - go: "1.13.x"
      install:
        - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.19.1
        - golangci-lint --version
        - GO111MODULE=off go get github.com/maratori/gochecknonamedreturn
        - GO111MODULE=off go get -t -v github.com/zimmski/go-mutesting/...
      script:
        - go test -race -p=8 -parallel=8 -tags=example -coverpkg ./... -coverprofile=coverage.out ./...
        - go-mutesting --verbose --exec 'go test -race -p=8 -parallel=8 ./...' ./...

        - golangci-lint run
        - gochecknonamedreturn ./...

        - echo "Check that go.mod and go.sum are tidy"
        - go mod tidy
        - if [[ `git status --porcelain go.mod` ]]; then git diff -- go.mod ; echo "go.mod is outdated, please run go mod tidy" ; exit 1; fi
        - if [[ `git status --porcelain go.sum` ]]; then git diff -- go.sum ; echo "go.sum is outdated, please run go mod tidy" ; exit 1; fi
      after_success:
        - bash <(curl -s https://codecov.io/bash)
    - os: osx
      go: "1.13.x"
      install:
        - GO111MODULE=off go get -t -v github.com/zimmski/go-mutesting/...
      script:
        - go test -race -p=8 -parallel=8 -tags=example ./...
        - go-mutesting --verbose --exec 'go test -race -p=8 -parallel=8 ./...' ./...
script:
  - go test -race -p=8 -parallel=8 -tags=example ./...
